
Line no 1: TOKEN <INT> Lexeme int found

Line no 1: TOKEN <ID> Lexeme main found

 ScopeTable # 1

 6 --> < main : ID >    


Line no 1: TOKEN <LPAREN> Lexeme ( found

Line no 1: TOKEN <RPAREN> Lexeme ) found

Line no 1: TOKEN <LCURL> Lexeme { found

Line no 2: TOKEN <INT> Lexeme int found

Line no 2: TOKEN <ID> Lexeme a found

 ScopeTable # 1

 1 --> < a : ID >    
 6 --> < main : ID >    


Line no 2: TOKEN <COMMA> Lexeme , found

Line no 2: TOKEN <ID> Lexeme b found

 ScopeTable # 1

 1 --> < a : ID >    
 2 --> < b : ID >    
 6 --> < main : ID >    


Line no 2: TOKEN <SEMICOLON> Lexeme ; found

Line no 3: TOKEN <ID> Lexeme a found

Lexeme a already exists in symbolTable

Line no 3: TOKEN <ASSIGNOP> Lexeme = found

Line no 3: TOKEN <ID> Lexeme a found

Lexeme a already exists in symbolTable

Line no 3: TOKEN <ADDOP> Lexeme + found

Line no 3: TOKEN <CONST_INT> Lexeme 1 found

 ScopeTable # 1

 1 --> < a : ID >    
 2 --> < b : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    


Line no 3: TOKEN <SEMICOLON> Lexeme ; found

Line no 4: TOKEN <CHAR> Lexeme char found

Line no 4: TOKEN <ID> Lexeme ch found

 ScopeTable # 1

 1 --> < a : ID >    
 2 --> < b : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    


Line no 4: TOKEN <ASSIGNOP> Lexeme = found

Line no 4: TOKEN <CONST_CHAR> Lexeme 'a' found

 ScopeTable # 1

 0 --> < 'a' : CONST_CHAR >    
 1 --> < a : ID >    
 2 --> < b : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    


Line no 4: TOKEN <SEMICOLON> Lexeme ; found

Line no 5: TOKEN <ID> Lexeme ch found

Lexeme ch already exists in symbolTable

Line no 5: TOKEN <ASSIGNOP> Lexeme = found

Line no 5: TOKEN <CONST_CHAR> Lexeme '\t' found

 ScopeTable # 1

 0 --> < 'a' : CONST_CHAR >    < '\t' : CONST_CHAR >    
 1 --> < a : ID >    
 2 --> < b : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    


Line no 5: TOKEN <SEMICOLON> Lexeme ; found

Line no 6: TOKEN <CHAR> Lexeme char found

Line no 6: TOKEN <ID> Lexeme c found

 ScopeTable # 1

 0 --> < 'a' : CONST_CHAR >    < '\t' : CONST_CHAR >    
 1 --> < a : ID >    
 2 --> < b : ID >    
 3 --> < c : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    


Line no 6: TOKEN <LTHIRD> Lexeme [ found

Line no 6: TOKEN <RTHIRD> Lexeme ] found

Line no 6: TOKEN <ASSIGNOP> Lexeme = found

Line no 6: TOKEN <STRING> Lexeme "ab\td" found

Line no 6: TOKEN <SEMICOLON> Lexeme ; found

Line no 7: TOKEN <ID> Lexeme printf found

 ScopeTable # 1

 0 --> < 'a' : CONST_CHAR >    < '\t' : CONST_CHAR >    
 1 --> < a : ID >    
 2 --> < b : ID >    < printf : ID >    
 3 --> < c : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    


Line no 7: TOKEN <LPAREN> Lexeme ( found

Line no 7: TOKEN <STRING> Lexeme "abc\
def\
ghi" found

Line no 9: TOKEN <RPAREN> Lexeme ) found

Line no 9: TOKEN <SEMICOLON> Lexeme ; found

Line no 10: TOKEN <COMMENT> Lexeme // a comment found

Line no 11: TOKEN <COMMENT> Lexeme /** another
*** comment ***/ found

Line no 13: TOKEN <RETURN> Lexeme return found

Line no 13: TOKEN <CONST_INT> Lexeme 0 found

 ScopeTable # 1

 0 --> < 'a' : CONST_CHAR >    < '\t' : CONST_CHAR >    
 1 --> < a : ID >    
 2 --> < b : ID >    < printf : ID >    
 3 --> < c : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    < 0 : CONST_INT >    


Line no 13: TOKEN <SEMICOLON> Lexeme ; found

Line no 14: TOKEN <RCURL> Lexeme } found

 ScopeTable # 1

 0 --> < 'a' : CONST_CHAR >    < '\t' : CONST_CHAR >    
 1 --> < a : ID >    
 2 --> < b : ID >    < printf : ID >    
 3 --> < c : ID >    
 5 --> < 1 : CONST_INT >    
 6 --> < main : ID >    < ch : ID >    < 0 : CONST_INT >    

Total lines: 14
Total errors: 0